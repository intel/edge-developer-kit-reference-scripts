####################################################################################
# Copyright (C) <2025> Intel Corporation
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# SPDX-License-Identifier: BSD-3-Clause
###################################################################################

FROM ubuntu:24.04
ARG DEBIAN_FRONTEND=noninteractive


#=======================================
# Core System Setup
#=======================================
RUN apt update -y && apt install -y \
    software-properties-common build-essential wget gpg pciutils git cmake \
    libglib2.0-0 libtbb12 v4l-utils libusb-1.0-0-dev libssl-dev libgtk-3-dev pkg-config \
    udev libudev-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev libva-dev yasm libx264-dev libx265-dev \
    sudo x11-apps

RUN apt-get update && apt-get install --no-install-recommends -y \
    libx11-xcb1 \
    libxcb1 \
    libxcb-glx0 \
    libxcb-shm0 \
    libxcb-shape0 \
    libxcb-xfixes0 \
    libxcb-render0 \
    libxcb-render-util0 \
    libxcb-randr0 \
    libxcb-keysyms1 \
    libxcb-xtest0

#=======================================
# Install Python 3.9 
#=======================================
RUN add-apt-repository ppa:deadsnakes/ppa && apt update -y && \
    apt install -y python3.9 python3.9-distutils python3.9-dev && \
    rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
RUN ln -sf /usr/bin/python3 /usr/bin/python

RUN wget https://bootstrap.pypa.io/get-pip.py && \
    python3.9 get-pip.py && \
    rm get-pip.py

# Install system-wide python3-numpy for OpenCV build
RUN apt update -y && apt install -y python3-numpy

# Install pip dependencies, ensuring NumPy is compatible with Python 3.9
RUN python3.9 -m pip install --upgrade pip setuptools wheel 

#=======================================
# Intel GPU Drivers
#=======================================
RUN set -o pipefail && \
    wget -qO - https://repositories.intel.com/gpu/intel-graphics.key | \
    gpg --yes --dearmor -o /usr/share/keyrings/intel-graphics.gpg && \
    echo "deb [arch=amd64,i386 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/gpu/ubuntu noble unified" > \
    /etc/apt/sources.list.d/intel-gpu-noble.list && \
    apt update && apt install -y \
    libze-intel-gpu1 libze1 intel-opencl-icd clinfo intel-gsc \
    && rm -rf /var/lib/apt/lists/*

#=======================================
# Python Environment
#=======================================
RUN apt remove -y python3-blinker || true

RUN python3.9 -m pip  install  \
    fire distro zeroconf psutil cython prometheus-client \
    yt-dlp youtube_dl pafy flask flask_bootstrap nncf ultralytics tensorflow

RUN python3.9 -m pip install --pre -U openvino openvino-dev[onnx] \
    --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly 

#=======================================
# Numpy for python 3.9
#=======================================
RUN apt remove -y python3-numpy
RUN python3.9 -m pip install "numpy>=2.0.0" 

#=======================================
# Create default user 'aidemo'
#=======================================
RUN useradd -m -s /bin/bash aidemo && chown -R aidemo:aidemo /home/aidemo
RUN echo "aidemo ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
USER aidemo

#=======================================
# Model Installation & Build
#=======================================
# Set the working directory
WORKDIR /workspace

# Change ownership of the working directory to the non-root user
RUN chown -R aidemo:aidemo /workspace

# Download OpenVINO Model Zoo tools
RUN git clone https://github.com/openvinotoolkit/open_model_zoo.git

WORKDIR /workspace/open_model_zoo/tools/model_tools
# Download the ResNet-50 PyTorch model
RUN ./downloader.py --name resnet-50-tf

# Convert the model to Intermediate Representation (IR) format
RUN ./converter.py --name resnet-50-tf

COPY ../fruit-and-vegetable-detection.mp4 /workspace/fruit-and-vegetable-detection.mp4

WORKDIR /workspace/open_model_zoo/demos/classification_demo/python
COPY fruit-and-vegetable-detection.mp4 .

# Healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD npm --version || exit 1
