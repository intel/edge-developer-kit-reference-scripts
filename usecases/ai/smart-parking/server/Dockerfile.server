# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

FROM openvino/ubuntu22_dev:2024.6.0

ARG RENDER_GROUP_ID 

USER root

# Install dependencies
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    wget \
    gpg \
    pkg-config \
    python3-dev \
    python3-gi \
    libcairo2-dev \
    libgirepository1.0-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gstreamer1.0-x \
    gstreamer1.0-alsa \
    gstreamer1.0-gl \
    gstreamer1.0-gtk3 \
    gstreamer1.0-qt5 \
    gstreamer1.0-pulseaudio

# Install Intel GPU Drivers
WORKDIR /tmp/neo

RUN wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.17791.9/intel-igc-core_1.0.17791.9_amd64.deb \
    && wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.17791.9/intel-igc-opencl_1.0.17791.9_amd64.deb \
    && wget https://github.com/intel/compute-runtime/releases/download/24.39.31294.12/intel-level-zero-gpu-dbgsym_1.6.31294.12_amd64.ddeb \
    && wget https://github.com/intel/compute-runtime/releases/download/24.39.31294.12/intel-level-zero-gpu_1.6.31294.12_amd64.deb \
    && wget https://github.com/intel/compute-runtime/releases/download/24.39.31294.12/intel-opencl-icd-dbgsym_24.39.31294.12_amd64.ddeb \
    && wget https://github.com/intel/compute-runtime/releases/download/24.39.31294.12/intel-opencl-icd_24.39.31294.12_amd64.deb \
    && wget https://github.com/intel/compute-runtime/releases/download/24.39.31294.12/libigdgmm12_22.5.2_amd64.deb \
    && dpkg -i *.deb

RUN groupadd -g ${RENDER_GROUP_ID} render \
    && usermod -aG render openvino

RUN mkdir -p /usr/src \
    && chown -R openvino:openvino /usr/src \
    && mkdir -p /usr/src/app/data \
    && chown -R openvino:openvino /usr/src/app/data \
    && mkdir -p /usr/src/app/model \
    && chown -R openvino:openvino /usr/src/app/model

USER openvino
WORKDIR /usr/src/app

COPY --chown=openvino:openvino ./server .

RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt

HEALTHCHECK --interval=60s --timeout=180s --start-period=5s --retries=3 \
  CMD curl -f --insecure https://localhost/health || exit 1

CMD [ "/bin/bash", "run.sh" ]
