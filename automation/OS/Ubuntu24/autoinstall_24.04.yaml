#cloud-config
# See the autoinstall documentation at:
# https://canonical-subiquity.readthedocs-hosted.com/en/latest/reference/autoinstall-reference.html
autoinstall:
  apt:
    disable_components: []
    fallback: offline-install
    geoip: true
    mirror-selection:
      primary:
      - country-mirror
      - arches: &id001
        - amd64
        - i386
        uri: http://archive.ubuntu.com/ubuntu/
      - arches: &id002
        - s390x
        - arm64
        - armhf
        - powerpc
        - ppc64el
        - riscv64
        uri: http://ports.ubuntu.com/ubuntu-ports
    preserve_sources_list: false
    security:
    - arches: *id001
      uri: http://security.ubuntu.com/ubuntu/
    - arches: *id002
      uri: http://ports.ubuntu.com/ubuntu-ports
  codecs:
    install: false
  drivers:
    install: false
  user-data:
    users:
    - name: user
      shell: /bin/bash
      passwd: $y$j9T$tYZ1G.bKzkTxojfywf4wj.$5Cb36ndo9nyVLvA23d5bJGQ2u2QADBnKw0rKwIS6rI4
      groups: [adm,sudo]
      lock-passwd: false
      sudo: ALL=(ALL) NOPASSWD:ALL
  #kernel:
  #  package: linux-generic-hwe-24.04
  keyboard:
    layout: us
    toggle: null
    variant: ''
  locale: en_US.UTF-8
  network:
    ethernets:
      ens3:
        dhcp4: true
    version: 2
  #oem:
  #  install: auto
  proxy: http://proxy-dmz.intel.com:912/
  source:
    id: ubuntu-desktop
    search_drivers: false
  ssh:
    allow-pw: true
    authorized-keys: []
    install-server: false
  storage:
    version: 1
    layout:
      name: direct
  timezone: Asia/Kuala_Lumpur
  version: 1
  packages:
    - openssh-server
    - git
    - net-tools
    - vim
  late-commands:
    # Add proxy in /etc/environment
    - curtin in-target --target=/target -- bash -c "echo -e '\nhttp_proxy=http://proxy-dmz.intel.com:912\nhttps_proxy=http://proxy-dmz.intel.com:912\nno_proxy=127.0.0.1,localhost,172.0.0.0/8,10.0.0.0/8' >> /etc/environment"
    - curtin in-target --target=/target -- bash -c "apt-get -y update"
    # Update time
    - curtin in-target --target=/target -- bash -c "apt-get -y install ntpdate"
    - curtin in-target --target=/target -- bash -c "ntpdate corp.intel.com"
    # Add docker proxy
    - curtin in-target --target=/target -- bash -c "mkdir -p /etc/systemd/system/docker.service.d && touch /etc/systemd/system/docker.service.d/http-proxy.conf"
    - |
      curtin in-target --target=/target -- bash -c "cat <<EOF > /etc/systemd/system/docker.service.d/http-proxy.conf
      [Service]
      Environment=\"HTTP_PROXY=http://proxy-dmz.intel.com:912\"
      Environment=\"HTTPS_PROXY=http://proxy-dmz.intel.com:912\"
      Environment=\"NO_PROXY=localhost,127.0.0.0/8,10.0.0.0/8\"
      EOF"
    - curtin in-target --target=/target -- bash -c "systemctl daemon-reload && systemctl restart docker"
    # Add Docker's official GPG key
    - curtin in-target --target=/target -- bash -c "apt-get -y update && apt-get -y install ca-certificates curl"
    - curtin in-target --target=/target -- bash -c "install -m 0755 -d /etc/apt/keyrings"
    - curtin in-target --target=/target -- bash -c "curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc"
    - curtin in-target --target=/target -- bash -c "chmod a+r /etc/apt/keyrings/docker.asc"
    # Add Docker repository to apt sources
    - curtin in-target --target=/target -- bash -c "echo 'deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable' > /etc/apt/sources.list.d/docker.list"
    - curtin in-target --target=/target -- bash -c "apt-get -y update"
    # Install Docker
    - curtin in-target --target=/target -- bash -c "apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"
    
  shutdown: poweroff